version: 2.1

orbs:
  aws-cli: circleci/aws-cli@2.0.3

executors:
  base:
    docker:
      - image: cimg/base:stable

parameters:
  other-lambda:
    type: boolean
    default: false
  proxy-lambda:
    type: boolean
    default: false
  infrastructure:
    type: boolean
    default: false
    
jobs:
  build-other-lambda:
    docker:
      - image: circleci/python:3.9
    steps:
      - checkout
      - run:
          name: test lambda
          command: |
            cd lambdas/other-lambda
            python -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
            python -m unittest
  deploy-other-lambda:
    working_directory: /tmp/project
    docker:
      - image: circleci/python:3.9
    steps:
      - checkout
      - run:
          name: terraform init & plan
          command: |
            cd lambdas/other-lambda
            terraform init -backend-config="access_key=${AWS_ACCESS_KEY_ID}" -backend-config="secret_key=${AWS_SECRET_ACCESS_KEY_ID}"
            terraform plan -out=tfplan
      - persist_to_workspace:
          root: .
          paths:
            - .
  proxy-lambda: 
      executor: base
      steps:
        - run: 
            command: |
              echo "proxy lambda" 
  infrastructure: 
      executor: base
      steps:
        - run: 
            command: |
              echo "infrastructure"   
              
workflows:
  build-deploy-other-lambda:
    when: << pipeline.parameters.other-lambda >>
    jobs:
      - build-other-lambda
      - deploy-other-lambda:
          requires: 
            - build-other-lambda
      
  build-deploy-proxy-lambda:
    when: << pipeline.parameters.proxy-lambda >> 
    jobs:
      - proxy-lambda
      
  deploy-infrastructure:
    when: << pipeline.parameters.infrastructure >>
    jobs:
      - infrastructure